(()=>{"use strict";let e,t,a,s,i;var r={136:()=>{try{self["workbox:core:7.0.0"]&&_()}catch(e){}},227:()=>{try{self["workbox:routing:7.0.0"]&&_()}catch(e){}},390:()=>{try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}},447:()=>{try{self["workbox:precaching:7.0.0"]&&_()}catch(e){}},626:()=>{try{self["workbox:expiration:7.0.0"]&&_()}catch(e){}}},n={};function c(e){var t=n[e];if(void 0!==t)return t.exports;var a=n[e]={exports:{}},s=!0;try{r[e](a,a.exports,c),s=!1}finally{s&&delete n[e]}return a.exports}c(136);class o extends Error{constructor(e,t){super(((e,...t)=>{let a=e;return t.length>0&&(a+=` :: ${JSON.stringify(t)}`),a})(e,t)),this.name=e,this.details=t}}let l=new Set,h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[h.prefix,e,h.suffix].filter(e=>e&&e.length>0).join("-"),d={getPrecacheName:e=>e||u(h.precache),getRuntimeName:e=>e||u(h.runtime)};function f(e,t){let a=new URL(e);for(let e of t)a.searchParams.delete(e);return a.href}async function p(e,t,a,s){let i=f(t.url,a);if(t.url===i)return e.match(t,s);let r=Object.assign(Object.assign({},s),{ignoreSearch:!0});for(let n of(await e.keys(t,r)))if(i===f(n.url,a))return e.match(n,s)}function g(e){e.then(()=>{})}class w{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}async function m(){for(let e of l)await e()}function y(e,t){let a=t();return e.waitUntil(a),a}async function v(t,a){let s=null;if(t.url&&(s=new URL(t.url).origin),s!==self.location.origin)throw new o("cross-origin-copy-response",{origin:s});let i=t.clone(),r={headers:new Headers(i.headers),status:i.status,statusText:i.statusText},n=a?a(r):r,c=!function(){if(void 0===e){let t=new Response("");if("body"in t)try{new Response(t.body),e=!0}catch(t){e=!1}e=!1}return e}()?await i.blob():i.body;return new Response(c,n)}let b=new WeakMap,R=new WeakMap,x=new WeakMap,E=new WeakMap,C=new WeakMap,T={get(e,t,a){if(e instanceof IDBTransaction){if("done"===t)return R.get(e);if("objectStoreNames"===t)return e.objectStoreNames||x.get(e);if("store"===t)return a.objectStoreNames[1]?void 0:a.objectStore(a.objectStoreNames[0])}return L(e[t])},set:(e,t,a)=>(e[t]=a,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function L(e){if(e instanceof IDBRequest){let t=new Promise((t,a)=>{let s=()=>{e.removeEventListener("success",i),e.removeEventListener("error",r)},i=()=>{t(L(e.result)),s()},r=()=>{a(e.error),s()};e.addEventListener("success",i),e.addEventListener("error",r)});return t.then(t=>{t instanceof IDBCursor&&b.set(t,e)}).catch(()=>{}),C.set(t,e),t}if(E.has(e))return E.get(e);let s=function(e){if("function"==typeof e)return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(a||(a=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(D(this),t),L(b.get(this))}:function(...t){return L(e.apply(D(this),t))}:function(t,...a){let s=e.call(D(this),t,...a);return x.set(s,t.sort?t.sort():[t]),L(s)};return e instanceof IDBTransaction&&function(e){if(R.has(e))return;let t=new Promise((t,a)=>{let s=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",r),e.removeEventListener("abort",r)},i=()=>{t(),s()},r=()=>{a(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",i),e.addEventListener("error",r),e.addEventListener("abort",r)});R.set(e,t)}(e),(t||(t=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(t=>e instanceof t)?new Proxy(e,T):e}(e);return s!==e&&(E.set(e,s),C.set(s,e)),s}let D=e=>C.get(e),k=["get","getKey","getAll","getAllKeys","count"],S=["put","add","delete","clear"],N=new Map;function U(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(N.get(t))return N.get(t);let a=t.replace(/FromIndex$/,""),s=t!==a,i=S.includes(a);if(!(a in(s?IDBIndex:IDBObjectStore).prototype)||!(i||k.includes(a)))return;let r=async function(e,...t){let r=this.transaction(e,i?"readwrite":"readonly"),n=r.store;return s&&(n=n.index(t.shift())),(await Promise.all([n[a](...t),i&&r.done]))[0]};return N.set(t,r),r}T=(e=>({...e,get:(t,a,s)=>U(t,a)||e.get(t,a,s),has:(t,a)=>!!U(t,a)||e.has(t,a)}))(T),c(626);let P="cache-entries",I=e=>{let t=new URL(e,location.href);return t.hash="",t.href};class A{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){let t=e.createObjectStore(P,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){let a=indexedDB.deleteDatabase(e);t&&a.addEventListener("blocked",e=>t(e.oldVersion,e)),L(a).then(()=>void 0)}(this._cacheName)}async setTimestamp(e,t){let a={url:e=I(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},s=(await this.getDb()).transaction(P,"readwrite",{durability:"relaxed"});await s.store.put(a),await s.done}async getTimestamp(e){let t=await this.getDb(),a=await t.get(P,this._getId(e));return null==a?void 0:a.timestamp}async expireEntries(e,t){let a=await this.getDb(),s=await a.transaction(P).store.index("timestamp").openCursor(null,"prev"),i=[],r=0;for(;s;){let a=s.value;a.cacheName===this._cacheName&&(e&&a.timestamp<e||t&&r>=t?i.push(s.value):r++),s=await s.continue()}let n=[];for(let e of i)await a.delete(P,e.id),n.push(e.url);return n}_getId(e){return this._cacheName+"|"+I(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:a,upgrade:s,blocking:i,terminated:r}={}){let n=indexedDB.open(e,1),c=L(n);return s&&n.addEventListener("upgradeneeded",e=>{s(L(n.result),e.oldVersion,e.newVersion,L(n.transaction),e)}),a&&n.addEventListener("blocked",e=>a(e.oldVersion,e.newVersion,e)),c.then(e=>{r&&e.addEventListener("close",()=>r()),i&&e.addEventListener("versionchange",e=>i(e.oldVersion,e.newVersion,e))}).catch(()=>{}),c}("workbox-expiration",0,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class M{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new A(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;let e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),a=await self.caches.open(this._cacheName);for(let e of t)await a.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,g(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(!this._maxAgeSeconds)return!1;{let t=await this._timestampModel.getTimestamp(e),a=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<a}}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class K{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:a,cachedResponse:s})=>{if(!s)return null;let i=this._isResponseDateFresh(s),r=this._getCacheExpiration(a);g(r.expireEntries());let n=r.updateTimestamp(t.url);if(e)try{e.waitUntil(n)}catch(e){}return i?s:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{let a=this._getCacheExpiration(e);await a.updateTimestamp(t.url),await a.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),l.add(t))}_getCacheExpiration(e){if(e===d.getRuntimeName())throw new o("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new M(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;let t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;let t=new Date(e.headers.get("date")).getTime();return isNaN(t)?null:t}async deleteCacheAndMetadata(){for(let[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}c(447);class q{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){let e=t.originalRequest.url;a?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return a}}}class W{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{let a=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return a?new Request(a,{headers:e.headers}):e},this._precacheController=e}}function B(e){return"string"==typeof e?new Request(e):e}c(390);class O{constructor(e,t){for(let a of(this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new w,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map,this._plugins))this._pluginStateMap.set(a,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,a=B(e);if("navigate"===a.mode&&t instanceof FetchEvent&&t.preloadResponse){let e=await t.preloadResponse;if(e)return e}let s=this.hasCallback("fetchDidFail")?a.clone():null;try{for(let e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:t})}catch(e){if(e instanceof Error)throw new o("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}let i=a.clone();try{let e;for(let s of(e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions),this.iterateCallbacks("fetchDidSucceed")))e=await s({event:t,request:i,response:e});return e}catch(e){throw s&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:s.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){let t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){let t,a=B(e),{cacheName:s,matchOptions:i}=this._strategy,r=await this.getCacheKey(a,"read"),n=Object.assign(Object.assign({},i),{cacheName:s});for(let e of(t=await caches.match(r,n),this.iterateCallbacks("cachedResponseWillBeUsed")))t=await e({cacheName:s,matchOptions:i,cachedResponse:t,request:r,event:this.event})||void 0;return t}async cachePut(e,t){let a=B(e);await new Promise(e=>setTimeout(e,0));let s=await this.getCacheKey(a,"write");if(!t)throw new o("cache-put-with-no-response",{url:new URL(String(s.url),location.href).href.replace(RegExp(`^${location.origin}`),"")});let i=await this._ensureResponseSafeToCache(t);if(!i)return!1;let{cacheName:r,matchOptions:n}=this._strategy,c=await self.caches.open(r),l=this.hasCallback("cacheDidUpdate"),h=l?await p(c,s.clone(),["__WB_REVISION__"],n):null;try{await c.put(s,l?i.clone():i)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await m(),e}for(let e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:r,oldResponse:h,newResponse:i.clone(),request:s,event:this.event});return!0}async getCacheKey(e,t){let a=`${e.url} | ${t}`;if(!this._cacheKeys[a]){let s=e;for(let e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=B(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[a]=s}return this._cacheKeys[a]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if("function"==typeof t[e]){let a=this._pluginStateMap.get(t),s=s=>{let i=Object.assign(Object.assign({},s),{state:a});return t[e](i)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(let e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return!a&&t&&200!==t.status&&(t=void 0),t}}class j{constructor(e={}){this.cacheName=d.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,a="string"==typeof e.request?new Request(e.request):e.request,s=new O(this,{event:t,request:a,params:"params"in e?e.params:void 0}),i=this._getResponse(s,a,t),r=this._awaitComplete(i,s,a,t);return[i,r]}async _getResponse(e,t,a){let s;await e.runCallbacks("handlerWillStart",{event:a,request:t});try{if(!(s=await this._handle(t,e))||"error"===s.type)throw new o("no-response",{url:t.url})}catch(i){if(i instanceof Error){for(let r of e.iterateCallbacks("handlerDidError"))if(s=await r({error:i,event:a,request:t}))break}if(s);else throw i}for(let i of e.iterateCallbacks("handlerWillRespond"))s=await i({event:a,request:t,response:s});return s}async _awaitComplete(e,t,a,s){let i,r;try{i=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:a,response:i}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:a,response:i,error:r}),t.destroy(),r)throw r}}class F extends j{constructor(e={}){e.cacheName=d.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(F.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){let a=await t.cacheMatch(e);return a||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a,s=t.params||{};if(this._fallbackToNetwork){let i=s.integrity,r=e.integrity,n=!r||r===i;a=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||i:void 0})),i&&n&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,a.clone()))}else throw new o("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();let a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new o("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(let[a,s]of this.plugins.entries())s!==F.copyRedirectedCacheableResponsesPlugin&&(s===F.defaultPrecacheCacheabilityPlugin&&(e=a),s.cacheWillUpdate&&t++);0===t?this.plugins.push(F.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}F.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},F.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await v(e):e};class H{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new F({cacheName:d.getPrecacheName(e),plugins:[...t,new W({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){let t=[];for(let a of e){"string"==typeof a?t.push(a):a&&void 0===a.revision&&t.push(a.url);let{cacheKey:e,url:s}=function(e){if(!e)throw new o("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){let t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}let{revision:t,url:a}=e;if(!a)throw new o("add-to-cache-list-unexpected-type",{entry:e});if(!t){let e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}let s=new URL(a,location.href),i=new URL(a,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:i.href}}(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new o("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new o("add-to-cache-list-conflicting-integrities",{url:s});this._cacheKeysToIntegrities.set(e,a.integrity)}this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,i),t.length>0&&console.warn(`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`)}}install(e){return y(e,async()=>{let t=new q;for(let[a,s]of(this.strategy.plugins.push(t),this._urlsToCacheKeys)){let t=this._cacheKeysToIntegrities.get(s),i=this._urlsToCacheModes.get(a),r=new Request(a,{integrity:t,cache:i,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:r,event:e}))}let{updatedURLs:a,notUpdatedURLs:s}=t;return{updatedURLs:a,notUpdatedURLs:s}})}activate(e){return y(e,async()=>{let e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(let i of t)a.has(i.url)||(await e.delete(i),s.push(i.url));return{deletedURLs:s}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){let t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){let t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a)return(await self.caches.open(this.strategy.cacheName)).match(a)}createHandlerBoundToURL(e){let t=this.getCacheKeyForURL(e);if(!t)throw new o("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params=Object.assign({cacheKey:t},a.params),this.strategy.handle(a))}}let G=()=>(s||(s=new H),s);c(227);let V=e=>e&&"object"==typeof e?e:{handle:e};class ${constructor(e,t,a="GET"){this.handler=V(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=V(e)}}class Q extends ${constructor(e,t,a){super(({url:t})=>{let a=e.exec(t.href);if(a)return t.origin!==location.origin&&0!==a.index?void 0:a.slice(1)},t,a)}}class J{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{let{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){let{payload:t}=e.data,a=Promise.all(t.urlsToCache.map(t=>{"string"==typeof t&&(t=[t]);let a=new Request(...t);return this.handleRequest({request:a,event:e})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){let a,s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;let i=s.origin===location.origin,{params:r,route:n}=this.findMatchingRoute({event:t,request:e,sameOrigin:i,url:s}),c=n&&n.handler,o=e.method;if(!c&&this._defaultHandlerMap.has(o)&&(c=this._defaultHandlerMap.get(o)),!c)return;try{a=c.handle({url:s,request:e,event:t,params:r})}catch(e){a=Promise.reject(e)}let l=n&&n.catchHandler;return a instanceof Promise&&(this._catchHandler||l)&&(a=a.catch(async a=>{if(l)try{return await l.handle({url:s,request:e,event:t,params:r})}catch(e){e instanceof Error&&(a=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw a})),a}findMatchingRoute({url:e,sameOrigin:t,request:a,event:s}){for(let i of this._routes.get(a.method)||[]){let r,n=i.match({url:e,sameOrigin:t,request:a,event:s});if(n)return Array.isArray(r=n)&&0===r.length||n.constructor===Object&&0===Object.keys(n).length?r=void 0:"boolean"==typeof n&&(r=void 0),{route:i,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,V(e))}setCatchHandler(e){this._catchHandler=V(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new o("unregister-route-but-not-found-with-method",{method:e.method});let t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new o("unregister-route-route-not-registered")}}function z(e,t,a){let s;if("string"==typeof e){let i=new URL(e,location.href);s=new $(({url:e})=>e.href===i.href,t,a)}else if(e instanceof RegExp)s=new Q(e,t,a);else if("function"==typeof e)s=new $(e,t,a);else if(e instanceof $)s=e;else throw new o("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return(!i&&((i=new J).addFetchListener(),i.addCacheListener()),i).registerRoute(s),s}class X extends ${constructor(e,t){super(({request:a})=>{let s=e.getURLsToCacheKeys();for(let i of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:a="index.html",cleanURLs:s=!0,urlManipulation:i}={}){let r=new URL(e,location.href);r.hash="",yield r.href;let n=function(e,t=[]){for(let a of[...e.searchParams.keys()])t.some(e=>e.test(a))&&e.searchParams.delete(a);return e}(r,t);if(yield n.href,a&&n.pathname.endsWith("/")){let e=new URL(n.href);e.pathname+=a,yield e.href}if(s){let e=new URL(n.href);e.pathname+=".html",yield e.href}if(i)for(let e of i({url:r}))yield e.href}(a.url,t)){let t=s.get(i);if(t){let a=e.getIntegrityForCacheKey(t);return{cacheKey:t,integrity:a}}}},e.strategy)}}let Y="-precache-",Z=async(e,t=Y)=>{let a=(await self.caches.keys()).filter(a=>a.includes(t)&&a.includes(self.registration.scope)&&a!==e);return await Promise.all(a.map(e=>self.caches.delete(e))),a};class ee extends j{async _handle(e,t){let a,s=await t.cacheMatch(e);if(!s)try{s=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(a=e)}if(!s)throw new o("no-response",{url:e.url,error:a});return s}}let et={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class ea extends j{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(et),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let a,s=[],i=[];if(this._networkTimeoutSeconds){let{id:r,promise:n}=this._getTimeoutPromise({request:e,logs:s,handler:t});a=r,i.push(n)}let r=this._getNetworkPromise({timeoutId:a,request:e,logs:s,handler:t});i.push(r);let n=await t.waitUntil((async()=>await t.waitUntil(Promise.race(i))||await r)());if(!n)throw new o("no-response",{url:e.url});return n}_getTimeoutPromise({request:e,logs:t,handler:a}){let s;return{promise:new Promise(t=>{s=setTimeout(async()=>{t(await a.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:a,handler:s}){let i,r;try{r=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(i=e)}return e&&clearTimeout(e),(i||!r)&&(r=await s.cacheMatch(t)),r}}self.__WB_DISABLE_DEV_LOGS=!0,self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&(console.log("[SW] Received SKIP_WAITING message, activating new version"),self.skipWaiting().then(()=>{self.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage({type:"SW_UPDATED",message:"Service worker updated successfully"})})})}))}),function(e,t){G().precache(e),z(new X(G(),void 0))}(self.__WB_MANIFEST),self.addEventListener("activate",e=>{let t=d.getPrecacheName();e.waitUntil(Z(t).then(e=>{}))}),self.addEventListener("activate",()=>self.clients.claim()),z(/^\/(_next\/static|static)\/.*/i,new ee({cacheName:"static-resources",plugins:[new K({maxEntries:64,maxAgeSeconds:31536e3})]}),"GET"),z(/\/api\/.*/,new ea({cacheName:"api-cache",networkTimeoutSeconds:10,plugins:[new K({maxEntries:50,maxAgeSeconds:300})]}),"GET"),z(/^\/(en|ar|fr)\/(manager|admin)\/.*/,new ea({cacheName:"dynamic-pages",networkTimeoutSeconds:10,plugins:[new K({maxEntries:100,maxAgeSeconds:86400})]}),"GET"),z(e=>{let{request:t}=e;return"navigate"===t.mode},new ea({cacheName:"pages",networkTimeoutSeconds:3,plugins:[new K({maxEntries:50,maxAgeSeconds:86400})]}),"GET"),z(e=>{let{request:t}=e;return"document"===t.destination},new ea({cacheName:"pages",networkTimeoutSeconds:3,plugins:[new K({maxEntries:50,maxAgeSeconds:86400})]}),"GET"),self.addEventListener("fetch",e=>{let{request:t}=e;"navigate"===t.mode&&e.respondWith(fetch(t).then(e=>{if(200===e.status){let a=e.clone();caches.open("pages").then(e=>{e.put(t,a)})}return e}).catch(()=>caches.match(t).then(e=>e||caches.match("/offline.html")))),"document"===t.destination&&e.respondWith(fetch(t).then(e=>{if(200===e.status){let a=e.clone();caches.open("pages").then(e=>{e.put(t,a)})}return e}).catch(()=>caches.match(t).then(e=>e||caches.match("/offline.html"))))}),self.addEventListener("install",e=>{console.log("[SW] Service worker installed"),e.waitUntil(caches.open("offline-pages").then(e=>e.add("/offline.html")))}),self.addEventListener("activate",e=>{console.log("[SW] Service worker activated",e)})})();